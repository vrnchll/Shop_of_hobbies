--Triggers--
CREATE TABLE History_orders
(
    Id_history_order INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CustomerId INTEGER,
    OrderId INTEGER,
    Operation NVARCHAR2(200),
    CreateAt TIMESTAMP DEFAULT SYSDATE
);


CREATE TABLE History_User_Action
(
    Id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserId INTEGER,
	Username VARCHAR(15),
    Operation NVARCHAR2(200) NOT NULL,
    CreateAt TIMESTAMP DEFAULT SYSDATE
);

--������� �� ���������� ������
CREATE OR REPLACE TRIGGER Order_insert_trigger
    AFTER INSERT ON ORDERS
    for each row
    begin
        INSERT INTO History_orders(CUSTOMERID, ORDERID, OPERATION, CREATEAT)
        values(:NEW.CUSTOMER_ID,:NEW.ID_ORDER,'Order was success ADDED',SYSDATE);
end;


    --������� �� ������ ������
CREATE OR REPLACE TRIGGER Order_repeat_trigger
    AFTER UPDATE ON ORDERS
      declare
            ORD ORDERS%ROWTYPE;
            CURSOR trig_del_order is select * from ORDERS;
    begin
            OPEN trig_del_order;
            FETCH trig_del_order INTO ORD;
            WHILE trig_del_order%FOUND
        LOOP
        IF(ORD.STATUS_ID=5) THEN
        INSERT INTO History_orders(CUSTOMERID, ORDERID, OPERATION, CREATEAT)
        values(ORD.CUSTOMER_ID,ORD.ID_ORDER,'USER was success DELETE',SYSDATE);
        END IF;
        FETCH trig_del_order INTO ORD;
        END LOOP;
end;
--
-- DROP TRIGGER Order_repeat_trigger;





--������� �� ����������� ������������
CREATE OR REPLACE TRIGGER USER_REGISTER_TRIGGER
    AFTER INSERT ON USERS
    for each row
    begin
        INSERT INTO History_User_Action(USERID, USERNAME, OPERATION, CREATEAT)
        values(:NEW.ID_USER,:NEW.LOGIN,'USER was success INSERT',SYSDATE);
end;


--������� �� �������� ������������
CREATE OR REPLACE TRIGGER User_delete_trigger
    AFTER UPDATE ON USERS
        declare
            USR USERS%ROWTYPE;
            CURSOR trig_del_user is select * from USERS;
    begin
            OPEN trig_del_user;
            FETCH trig_del_user INTO USR;
            WHILE trig_del_user%FOUND
        LOOP
        IF(USR.ACTIVE=0) THEN
        INSERT INTO History_User_Action(USERID, USERNAME, OPERATION, CREATEAT)
        values(USR.ID_USER,USR.LOGIN,'USER was success DELETE',SYSDATE);
        END IF;
        FETCH trig_del_user INTO USR;
        END LOOP;
end;

-- DROP TRIGGER User_delete_trigger;


